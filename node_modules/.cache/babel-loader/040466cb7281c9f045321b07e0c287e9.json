{"ast":null,"code":"var _jsxFileName = \"/Users/njn0te/Documents/yumemi_kadai/national-data-explorer/src/app/dataExplorer/chart/view.jsx\";\nimport React from 'react';\nimport { ResponsiveContainer, LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Line } from 'recharts';\nimport { CircularProgress } from '@material-ui/core';\nconst colors = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n/**\n * チャートを表示するコンポーネント\n * @param {object} props\n * @param {object[]} props.chartData チャートのデータ 例：[{name: 'a', value: 12}]\n * @param {string[]} props.legendNames チャートの凡例名\n * @param {boolean} props.processing チャートデータのロード状態\n * @param {string} props.messageOnEmpty 表示するデータがない時のメッセージ\n * @param {string} props.error データの取得に失敗した時のメッセージ\n */\n\nexport const Chart = ({\n  chartData,\n  legendNames,\n  processing,\n  messageOnEmpty,\n  error\n}) => {\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, error);\n  if (processing) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 49\n    }\n  }));\n  if (!legendNames.length) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 35\n    }\n  }, messageOnEmpty);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: chartData,\n    margin: {\n      top: 5,\n      right: 20,\n      left: 40,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    tickFormatter: tick => tick.toLocaleString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    formatter: value => value.toLocaleString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    align: \"right\",\n    verticalAlign: \"top\",\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), legendNames.map((name, index) => /*#__PURE__*/React.createElement(Line, {\n    dataKey: name,\n    key: `datakey-${name}`,\n    stroke: colors[index % colors.length],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/njn0te/Documents/yumemi_kadai/national-data-explorer/src/app/dataExplorer/chart/view.jsx"],"names":["React","ResponsiveContainer","LineChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Line","CircularProgress","colors","Chart","chartData","legendNames","processing","messageOnEmpty","error","length","top","right","left","bottom","tick","toLocaleString","value","map","name","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF,EAQEC,IARF,QASO,UATP;AAUA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAf;AAEA;;;;;;;;;;AASA,OAAO,MAAMC,KAAK,GAAG,CAAC;AACpBC,EAAAA,SADoB;AAEpBC,EAAAA,WAFoB;AAGpBC,EAAAA,UAHoB;AAIpBC,EAAAA,cAJoB;AAKpBC,EAAAA;AALoB,CAAD,KAMf;AACJ,MAAIA,KAAJ,EAAW,oBAAO;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CAAP;AACX,MAAIF,UAAJ,EAAgB,oBAAO;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAuB,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAAP;AAChB,MAAI,CAACD,WAAW,CAACI,MAAjB,EAAyB,oBAAO;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,cAAxB,CAAP;AACzB,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEH,SADR;AAEE,IAAA,MAAM,EAAE;AAAEM,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,KAAK,EAAE,EAAjB;AAAqBC,MAAAA,IAAI,EAAE,EAA3B;AAA+BC,MAAAA,MAAM,EAAE;AAAvC,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAEC,IAAI,IAAIA,IAAI,CAACC,cAAL,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEC,KAAK,IAAIA,KAAK,CAACD,cAAN,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,aAAa,EAAC,KAApC;AAA0C,IAAA,MAAM,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAUIV,WAAW,CAACY,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBACd,oBAAC,IAAD;AACE,IAAA,OAAO,EAAED,IADX;AAEE,IAAA,GAAG,EAAG,WAAUA,IAAK,EAFvB;AAGE,IAAA,MAAM,EAAEhB,MAAM,CAACiB,KAAK,GAAGjB,MAAM,CAACO,MAAhB,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVJ,CADF,CADF,CADF;AAyBD,CAnCM","sourcesContent":["import React from 'react'\nimport {\n  ResponsiveContainer,\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Line\n} from 'recharts'\nimport { CircularProgress } from '@material-ui/core'\n\nconst colors = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042']\n\n/**\n * チャートを表示するコンポーネント\n * @param {object} props\n * @param {object[]} props.chartData チャートのデータ 例：[{name: 'a', value: 12}]\n * @param {string[]} props.legendNames チャートの凡例名\n * @param {boolean} props.processing チャートデータのロード状態\n * @param {string} props.messageOnEmpty 表示するデータがない時のメッセージ\n * @param {string} props.error データの取得に失敗した時のメッセージ\n */\nexport const Chart = ({\n  chartData,\n  legendNames,\n  processing,\n  messageOnEmpty,\n  error\n}) => {\n  if (error) return <div className='chart'>{error}</div>\n  if (processing) return <div className='chart'><CircularProgress /></div>\n  if (!legendNames.length) return <div className='chart'>{messageOnEmpty}</div>\n  return (\n    <div className='chart'>\n      <ResponsiveContainer>\n        <LineChart\n          data={chartData}\n          margin={{ top: 5, right: 20, left: 40, bottom: 5 }}\n        >\n          <CartesianGrid strokeDasharray='3 3' />\n          <XAxis dataKey='name' />\n          <YAxis tickFormatter={tick => tick.toLocaleString()} />\n          <Tooltip formatter={value => value.toLocaleString()} />\n          <Legend align='right' verticalAlign='top' layout='vertical' />\n          {\n            legendNames.map((name, index) => (\n              <Line\n                dataKey={name}\n                key={`datakey-${name}`}\n                stroke={colors[index % colors.length]}\n              />\n            ))\n          }\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}