{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport api from 'api';\nimport { FETCH_PREFECTURE_NAMES_PROCESSING, FETCH_PREFECTURE_NAMES_SUCCESS, FETCH_PREFECTURE_NAMES_FAILED, PREFECTURE_TOGGLED, FETCH_PREFECTURE_POPULATION_PROCESSING, FETCH_PREFECTURE_POPULATION_SUCCESS, FETCH_PREFECTURE_POPULATION_FAILED } from 'store/types';\n\nfunction* fetchPrefectureNames() {\n  try {\n    const prefectureNames = yield api.nationalStatistics.fetchPrefectureNames();\n    yield put({\n      type: FETCH_PREFECTURE_NAMES_SUCCESS,\n      prefectureNames\n    });\n  } catch (e) {\n    yield put({\n      type: FETCH_PREFECTURE_NAMES_FAILED,\n      error: 'データ取得に問題がありました。しばらくしてからもう一度お試しください。'\n    });\n    console.error(e);\n  }\n}\n\nfunction* fetchPrefecturePopulation({\n  prefCode,\n  shouldFetchPopulation\n}) {\n  try {\n    if (!shouldFetchPopulation) return;\n    yield put({\n      type: FETCH_PREFECTURE_POPULATION_PROCESSING\n    });\n    const populationData = yield api.nationalStatistics.fetchPrefecturePopulation(prefCode, 'total', 1970, 2020);\n    yield put({\n      type: FETCH_PREFECTURE_POPULATION_SUCCESS,\n      prefCode,\n      populationData\n    });\n  } catch (e) {\n    // チェックボックスのマークを外す。\n    yield put({\n      type: PREFECTURE_TOGGLED,\n      prefCode,\n      shouldFetchPopulation: false\n    });\n    yield put({\n      type: FETCH_PREFECTURE_POPULATION_FAILED,\n      error: 'データ取得に問題がありました。しばらくしてからもう一度お試しください。'\n    });\n    console.error(e);\n  }\n}\n\nexport default function* prefectureDataWatcher() {\n  yield takeEvery(FETCH_PREFECTURE_NAMES_PROCESSING, fetchPrefectureNames);\n  yield takeEvery(PREFECTURE_TOGGLED, fetchPrefecturePopulation);\n}","map":{"version":3,"sources":["/Users/njn0te/Documents/yumemi_kadai/national-data-explorer/src/store/prefectureData/saga.js"],"names":["put","takeEvery","api","FETCH_PREFECTURE_NAMES_PROCESSING","FETCH_PREFECTURE_NAMES_SUCCESS","FETCH_PREFECTURE_NAMES_FAILED","PREFECTURE_TOGGLED","FETCH_PREFECTURE_POPULATION_PROCESSING","FETCH_PREFECTURE_POPULATION_SUCCESS","FETCH_PREFECTURE_POPULATION_FAILED","fetchPrefectureNames","prefectureNames","nationalStatistics","type","e","error","console","fetchPrefecturePopulation","prefCode","shouldFetchPopulation","populationData","prefectureDataWatcher"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SACEC,iCADF,EAEEC,8BAFF,EAGEC,6BAHF,EAIEC,kBAJF,EAKEC,sCALF,EAMEC,mCANF,EAOEC,kCAPF,QAQO,aARP;;AAUA,UAAWC,oBAAX,GAAmC;AACjC,MAAI;AACF,UAAMC,eAAe,GAAG,MAAMT,GAAG,CAACU,kBAAJ,CAAuBF,oBAAvB,EAA9B;AACA,UAAMV,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAET,8BAAR;AAAwCO,MAAAA;AAAxC,KAAD,CAAT;AACD,GAHD,CAGE,OAAOG,CAAP,EAAU;AACV,UAAMd,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAER,6BADE;AAERU,MAAAA,KAAK,EAAE;AAFC,KAAD,CAAT;AAIAC,IAAAA,OAAO,CAACD,KAAR,CAAcD,CAAd;AACD;AACF;;AAED,UAAWG,yBAAX,CAAsC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAtC,EAA2E;AACzE,MAAI;AACF,QAAI,CAACA,qBAAL,EAA4B;AAC5B,UAAMnB,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAT;AACA,UAAMa,cAAc,GAAG,MAAMlB,GAAG,CAACU,kBAAJ,CAC1BK,yBAD0B,CACAC,QADA,EACU,OADV,EACmB,IADnB,EACyB,IADzB,CAA7B;AAEA,UAAMlB,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAEL,mCADE;AAERU,MAAAA,QAFQ;AAGRE,MAAAA;AAHQ,KAAD,CAAT;AAKD,GAVD,CAUE,OAAON,CAAP,EAAU;AACV;AACA,UAAMd,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAEP,kBADE;AAERY,MAAAA,QAFQ;AAGRC,MAAAA,qBAAqB,EAAE;AAHf,KAAD,CAAT;AAKA,UAAMnB,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAEJ,kCADE;AAERM,MAAAA,KAAK,EAAE;AAFC,KAAD,CAAT;AAIAC,IAAAA,OAAO,CAACD,KAAR,CAAcD,CAAd;AACD;AACF;;AAED,eAAe,UAAWO,qBAAX,GAAoC;AACjD,QAAMpB,SAAS,CAACE,iCAAD,EAAoCO,oBAApC,CAAf;AACA,QAAMT,SAAS,CAACK,kBAAD,EAAqBW,yBAArB,CAAf;AACD","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects'\nimport api from 'api'\nimport {\n  FETCH_PREFECTURE_NAMES_PROCESSING,\n  FETCH_PREFECTURE_NAMES_SUCCESS,\n  FETCH_PREFECTURE_NAMES_FAILED,\n  PREFECTURE_TOGGLED,\n  FETCH_PREFECTURE_POPULATION_PROCESSING,\n  FETCH_PREFECTURE_POPULATION_SUCCESS,\n  FETCH_PREFECTURE_POPULATION_FAILED\n} from 'store/types'\n\nfunction * fetchPrefectureNames () {\n  try {\n    const prefectureNames = yield api.nationalStatistics.fetchPrefectureNames()\n    yield put({ type: FETCH_PREFECTURE_NAMES_SUCCESS, prefectureNames })\n  } catch (e) {\n    yield put({\n      type: FETCH_PREFECTURE_NAMES_FAILED,\n      error: 'データ取得に問題がありました。しばらくしてからもう一度お試しください。'\n    })\n    console.error(e)\n  }\n}\n\nfunction * fetchPrefecturePopulation ({ prefCode, shouldFetchPopulation }) {\n  try {\n    if (!shouldFetchPopulation) return\n    yield put({ type: FETCH_PREFECTURE_POPULATION_PROCESSING })\n    const populationData = yield api.nationalStatistics\n      .fetchPrefecturePopulation(prefCode, 'total', 1970, 2020)\n    yield put({\n      type: FETCH_PREFECTURE_POPULATION_SUCCESS,\n      prefCode,\n      populationData\n    })\n  } catch (e) {\n    // チェックボックスのマークを外す。\n    yield put({\n      type: PREFECTURE_TOGGLED,\n      prefCode,\n      shouldFetchPopulation: false\n    })\n    yield put({\n      type: FETCH_PREFECTURE_POPULATION_FAILED,\n      error: 'データ取得に問題がありました。しばらくしてからもう一度お試しください。'\n    })\n    console.error(e)\n  }\n}\n\nexport default function * prefectureDataWatcher () {\n  yield takeEvery(FETCH_PREFECTURE_NAMES_PROCESSING, fetchPrefectureNames)\n  yield takeEvery(PREFECTURE_TOGGLED, fetchPrefecturePopulation)\n}\n"]},"metadata":{},"sourceType":"module"}