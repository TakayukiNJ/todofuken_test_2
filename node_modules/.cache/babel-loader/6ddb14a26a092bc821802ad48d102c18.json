{"ast":null,"code":"import { FETCH_PREFECTURE_NAMES_PROCESSING, FETCH_PREFECTURE_NAMES_SUCCESS, FETCH_PREFECTURE_NAMES_FAILED, PREFECTURE_TOGGLED, FETCH_PREFECTURE_POPULATION_PROCESSING, FETCH_PREFECTURE_POPULATION_SUCCESS, FETCH_PREFECTURE_POPULATION_FAILED } from 'store/types';\nconst INITIAL_STATE = {\n  prefectures: {},\n  prefectureNameError: '',\n  prefecturePopulationError: '',\n  prefectureNamesLoading: true,\n  prefecturePopulationLoading: false\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_PREFECTURE_NAMES_PROCESSING:\n      return { ...state,\n        prefectureNameError: '',\n        prefectureNamesLoading: true\n      };\n\n    case FETCH_PREFECTURE_NAMES_SUCCESS:\n      {\n        const prefectureState = action.prefectureNames.reduce((prefectureState, {\n          prefName,\n          prefCode\n        }) => {\n          prefectureState[prefCode] = {\n            name: prefName,\n            selected: false\n          };\n          return prefectureState;\n        }, {});\n        return { ...state,\n          prefectures: prefectureState,\n          prefectureNameError: '',\n          prefectureNamesLoading: false\n        };\n      }\n\n    case FETCH_PREFECTURE_NAMES_FAILED:\n      return { ...state,\n        prefectureNameError: action.error,\n        prefectureNamesLoading: false\n      };\n\n    case PREFECTURE_TOGGLED:\n      {\n        const prefectures = { ...state.prefectures\n        };\n        prefectures[action.prefCode].selected = !prefectures[action.prefCode].selected;\n        return { ...state,\n          prefectures\n        };\n      }\n\n    case FETCH_PREFECTURE_POPULATION_PROCESSING:\n      return { ...state,\n        prefecturePopulationLoading: true\n      };\n\n    case FETCH_PREFECTURE_POPULATION_SUCCESS:\n      {\n        const prefectures = { ...state.prefectures\n        };\n        prefectures[action.prefCode].populationData = action.populationData;\n        return { ...state,\n          prefectures,\n          prefecturePopulationError: '',\n          prefecturePopulationLoading: false\n        };\n      }\n\n    case FETCH_PREFECTURE_POPULATION_FAILED:\n      return { ...state,\n        prefecturePopulationError: action.error,\n        prefecturePopulationLoading: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/njn0te/Documents/yumemi_kadai/national-data-explorer/src/store/prefectureData/reducer.js"],"names":["FETCH_PREFECTURE_NAMES_PROCESSING","FETCH_PREFECTURE_NAMES_SUCCESS","FETCH_PREFECTURE_NAMES_FAILED","PREFECTURE_TOGGLED","FETCH_PREFECTURE_POPULATION_PROCESSING","FETCH_PREFECTURE_POPULATION_SUCCESS","FETCH_PREFECTURE_POPULATION_FAILED","INITIAL_STATE","prefectures","prefectureNameError","prefecturePopulationError","prefectureNamesLoading","prefecturePopulationLoading","state","action","type","prefectureState","prefectureNames","reduce","prefName","prefCode","name","selected","error","populationData"],"mappings":"AAAA,SACEA,iCADF,EAEEC,8BAFF,EAGEC,6BAHF,EAIEC,kBAJF,EAKEC,sCALF,EAMEC,mCANF,EAOEC,kCAPF,QAQO,aARP;AAUA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,EADO;AAEpBC,EAAAA,mBAAmB,EAAE,EAFD;AAGpBC,EAAAA,yBAAyB,EAAE,EAHP;AAIpBC,EAAAA,sBAAsB,EAAE,IAJJ;AAKpBC,EAAAA,2BAA2B,EAAE;AALT,CAAtB;AAQA,gBAAe,CAACC,KAAK,GAAGN,aAAT,EAAwBO,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,iCAAL;AACE,aAAO,EAAE,GAAGa,KAAL;AAAYJ,QAAAA,mBAAmB,EAAE,EAAjC;AAAqCE,QAAAA,sBAAsB,EAAE;AAA7D,OAAP;;AAEF,SAAKV,8BAAL;AAAqC;AACnC,cAAMe,eAAe,GAAGF,MAAM,CAACG,eAAP,CAAuBC,MAAvB,CAA8B,CACpDF,eADoD,EACnC;AAAEG,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SADmC,KAEjD;AACHJ,UAAAA,eAAe,CAACI,QAAD,CAAf,GAA4B;AAC1BC,YAAAA,IAAI,EAAEF,QADoB;AAE1BG,YAAAA,QAAQ,EAAE;AAFgB,WAA5B;AAIA,iBAAON,eAAP;AACD,SARuB,EAQrB,EARqB,CAAxB;AAUA,eAAO,EACL,GAAGH,KADE;AAELL,UAAAA,WAAW,EAAEQ,eAFR;AAGLP,UAAAA,mBAAmB,EAAE,EAHhB;AAILE,UAAAA,sBAAsB,EAAE;AAJnB,SAAP;AAMD;;AAED,SAAKT,6BAAL;AAAoC,aAAO,EACzC,GAAGW,KADsC;AAEzCJ,QAAAA,mBAAmB,EAAEK,MAAM,CAACS,KAFa;AAGzCZ,QAAAA,sBAAsB,EAAE;AAHiB,OAAP;;AAMpC,SAAKR,kBAAL;AAAyB;AACvB,cAAMK,WAAW,GAAG,EAAE,GAAGK,KAAK,CAACL;AAAX,SAApB;AACAA,QAAAA,WAAW,CAACM,MAAM,CAACM,QAAR,CAAX,CAA6BE,QAA7B,GACE,CAACd,WAAW,CAACM,MAAM,CAACM,QAAR,CAAX,CAA6BE,QADhC;AAGA,eAAO,EAAE,GAAGT,KAAL;AAAYL,UAAAA;AAAZ,SAAP;AACD;;AAED,SAAKJ,sCAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYD,QAAAA,2BAA2B,EAAE;AAAzC,OAAP;;AAEF,SAAKP,mCAAL;AAA0C;AACxC,cAAMG,WAAW,GAAG,EAAE,GAAGK,KAAK,CAACL;AAAX,SAApB;AACAA,QAAAA,WAAW,CAACM,MAAM,CAACM,QAAR,CAAX,CAA6BI,cAA7B,GAA8CV,MAAM,CAACU,cAArD;AAEA,eAAO,EACL,GAAGX,KADE;AAELL,UAAAA,WAFK;AAGLE,UAAAA,yBAAyB,EAAE,EAHtB;AAILE,UAAAA,2BAA2B,EAAE;AAJxB,SAAP;AAMD;;AAED,SAAKN,kCAAL;AAAyC,aAAO,EAC9C,GAAGO,KAD2C;AAE9CH,QAAAA,yBAAyB,EAAEI,MAAM,CAACS,KAFY;AAG9CX,QAAAA,2BAA2B,EAAE;AAHiB,OAAP;;AAMzC;AACE,aAAOC,KAAP;AA3DJ;AA6DD,CA9DD","sourcesContent":["import {\n  FETCH_PREFECTURE_NAMES_PROCESSING,\n  FETCH_PREFECTURE_NAMES_SUCCESS,\n  FETCH_PREFECTURE_NAMES_FAILED,\n  PREFECTURE_TOGGLED,\n  FETCH_PREFECTURE_POPULATION_PROCESSING,\n  FETCH_PREFECTURE_POPULATION_SUCCESS,\n  FETCH_PREFECTURE_POPULATION_FAILED\n} from 'store/types'\n\nconst INITIAL_STATE = {\n  prefectures: {},\n  prefectureNameError: '',\n  prefecturePopulationError: '',\n  prefectureNamesLoading: true,\n  prefecturePopulationLoading: false\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_PREFECTURE_NAMES_PROCESSING:\n      return { ...state, prefectureNameError: '', prefectureNamesLoading: true }\n\n    case FETCH_PREFECTURE_NAMES_SUCCESS: {\n      const prefectureState = action.prefectureNames.reduce((\n        prefectureState, { prefName, prefCode }\n      ) => {\n        prefectureState[prefCode] = {\n          name: prefName,\n          selected: false\n        }\n        return prefectureState\n      }, {})\n\n      return {\n        ...state,\n        prefectures: prefectureState,\n        prefectureNameError: '',\n        prefectureNamesLoading: false\n      }\n    }\n\n    case FETCH_PREFECTURE_NAMES_FAILED: return {\n      ...state,\n      prefectureNameError: action.error,\n      prefectureNamesLoading: false\n    }\n\n    case PREFECTURE_TOGGLED: {\n      const prefectures = { ...state.prefectures }\n      prefectures[action.prefCode].selected =\n        !prefectures[action.prefCode].selected\n\n      return { ...state, prefectures }\n    }\n\n    case FETCH_PREFECTURE_POPULATION_PROCESSING:\n      return { ...state, prefecturePopulationLoading: true }\n\n    case FETCH_PREFECTURE_POPULATION_SUCCESS: {\n      const prefectures = { ...state.prefectures }\n      prefectures[action.prefCode].populationData = action.populationData\n\n      return {\n        ...state,\n        prefectures,\n        prefecturePopulationError: '',\n        prefecturePopulationLoading: false\n      }\n    }\n\n    case FETCH_PREFECTURE_POPULATION_FAILED: return {\n      ...state,\n      prefecturePopulationError: action.error,\n      prefecturePopulationLoading: false\n    }\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}